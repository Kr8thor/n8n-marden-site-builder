{
  "name": "WordPress Content Synchronization",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "content",
        "options": {
          "responseMode": "responseNode"
        },
        "responseCode": 200
      },
      "name": "Content API Endpoint",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        380,
        300
      ]
    },
    {
      "parameters": {
        "operation": "getPosts",
        "limitOperations": true,
        "limit": 10,
        "options": {
          "status": "publish",
          "returnFields": [
            "_embedded",
            "id",
            "title",
            "slug",
            "content",
            "excerpt",
            "featured_media",
            "date"
          ]
        }
      },
      "name": "WordPress Posts",
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        600,
        300
      ],
      "credentials": {
        "wordpressApi": {
          "id": "1",
          "name": "WordPress account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Format WordPress data for React\nreturn items.map(item => {\n  const post = item.json;\n  return {\n    id: post.id,\n    title: post.title.rendered,\n    slug: post.slug,\n    content: post.content.rendered,\n    excerpt: post.excerpt.rendered,\n    featuredImage: post._embedded && \n                post._embedded['wp:featuredmedia'] ? \n                post._embedded['wp:featuredmedia'][0].source_url : null,\n    author: post._embedded && \n           post._embedded.author ? \n           post._embedded.author[0].name : null,\n    date: post.date\n  };\n});"
      },
      "name": "Transform for Frontend",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        820,
        300
      ]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseMode": "responseBody",
        "options": {}
      },
      "name": "HTTP Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1040,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "forms/submit",
        "options": {
          "responseMode": "responseNode"
        },
        "responseCode": 200,
        "authentication": "none"
      },
      "name": "Form Submission API",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        380,
        500
      ]
    },
    {
      "parameters": {
        "functionCode": "// Validate form data\nconst { name, email, message } = $input.body;\nif (!name || !email || !message) {\n  return { valid: false, error: 'Missing required fields' };\n}\nif (!email.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,}$/)) {\n  return { valid: false, error: 'Invalid email format' };\n}\nreturn { valid: true, data: $input.body };"
      },
      "name": "Validate Form",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        600,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"valid\"]}}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "name": "Is Form Valid?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        820,
        500
      ]
    },
    {
      "parameters": {
        "url": "={{$json[\"data\"][\"siteUrl\"]}}/wp-json/myapp/v1/form-submission",
        "options": {
          "method": "POST",
          "body": "={{$json[\"data\"]}}",
          "allowUnauthorizedCerts": true,
          "bodyContentType": "json",
          "fullResponse": true,
          "timeout": 20
        }
      },
      "name": "Send to WordPress",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1020,
        440
      ]
    },
    {
      "parameters": {
        "responseCode": 400,
        "responseData": "firstInput",
        "options": {}
      },
      "name": "Return Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1020,
        580
      ]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseData": "firstInput",
        "options": {}
      },
      "name": "Return Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1240,
        440
      ]
    }
  ],
  "connections": {
    "Content API Endpoint": {
      "main": [
        [
          {
            "node": "WordPress Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WordPress Posts": {
      "main": [
        [
          {
            "node": "Transform for Frontend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform for Frontend": {
      "main": [
        [
          {
            "node": "HTTP Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Form Submission API": {
      "main": [
        [
          {
            "node": "Validate Form",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form": {
      "main": [
        [
          {
            "node": "Is Form Valid?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Form Valid?": {
      "main": [
        [
          {
            "node": "Send to WordPress",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to WordPress": {
      "main": [
        [
          {
            "node": "Return Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "4CoggHF1MBJV6Txm"
}